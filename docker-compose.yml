services:
  api-gateway:
    container_name: curso-api-gateway
    image: ${DOCKER_REGISTRY-}claseseisapigateway
    build:
      context: .
      dockerfile: clase-seis-api-gateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - OCELOT_ENVIRONMENT=-docker
    ports:
      - "6001:80"
    networks:
      red-curso-api:
    restart: always

  api-autenticacion:
    container_name: curso-api-autenticacion
    image: ${DOCKER_REGISTRY-}clasecincoapiautenticacion
    build:
      context: .
      dockerfile: clase-cinco-api-autenticacion/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - CADENA=Server=192.168.1.20;Database=Clase02;User Id=SA;Password=Ab123456*;TrustServerCertificate=True
      - CLAVE_SECRETA_JWT=MiClaveSecreta2025@MiClaveSecreta2025@MiClaveSecreta2025@CursoApiNetCore2025
      - TIEMPO_EXPIRACION_JWT=10
    networks:
      red-curso-api:
    restart: always
  
  api-categoria:
    container_name: curso-api-categoria
    image: ${DOCKER_REGISTRY-}clasetresapicategoria
    build:
      context: .
      dockerfile: clase-tres-api-categoria/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - CADENA=Server=192.168.1.20;Database=Clase02;User Id=SA;Password=Ab123456*;TrustServerCertificate=True
      - CLAVE_SECRETA_JWT=MiClaveSecreta2025@MiClaveSecreta2025@MiClaveSecreta2025@CursoApiNetCore2025
      - REDIS_CONNECTION=api-redis:6379
    networks:
      red-curso-api:
    restart: always
    depends_on:
      api-redis:
        condition: service_started
    
  api-catalogo:
    container_name: curso-api-catalogo
    image: ${DOCKER_REGISTRY-}clasesieteapicatalogo
    build:
      context: .
      dockerfile: clase-tres-api-catalogo/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - CLAVE_SECRETA_JWT=MiClaveSecreta2025@MiClaveSecreta2025@MiClaveSecreta2025@CursoApiNetCore2025
    networks:
      red-curso-api:
    restart: always

  api-redis:
    container_name: curso-api-redis
    image: redis
    networks:
      red-curso-api:
    restart: always
    
  prometheus-server:
    container_name: curso-api-prometheus
    image: prom/prometheus
    ports: 
      - 9000:9000
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      red-curso-api:
    restart: always

  grafana-server:
    container_name: curso-api-grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      prometheus-server:
        condition: service_started
    networks:
      red-curso-api:
    restart: always

networks:
  red-curso-api:
    driver: bridge